/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, vector<vector<int>>& ans){
        if(root==NULL){
            return;
        }
        queue<TreeNode*> q;
        q.push(root);
        int i = 0;
        while(!q.empty()){
            int nodesAtCurrentLevel = q.size();
            vector<int> v;
            while(nodesAtCurrentLevel--){
                TreeNode* currNode = q.front();
                q.pop();
                v.push_back(currNode->val);
                if(currNode->left!=NULL){
                    q.push(currNode->left);
                }
                if(currNode->right!=NULL){
                    q.push(currNode->right);
                }
            }
            if(i%2==0){
                ans.push_back(v);
            }
            else if(i%2!=0){
                reverse(v.begin(), v.end());
                ans.push_back(v);
            }
            i++;
            v.clear();
        }
    }
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        solve(root, ans);
        return ans;
    }
};
