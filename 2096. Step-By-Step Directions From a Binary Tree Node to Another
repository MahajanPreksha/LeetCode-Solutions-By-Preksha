/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool find(string &path, TreeNode*node, int value){
        if(node->val==value){
            return true;
        }
        if(node->left && find(path, node->left, value)){
            path.push_back('L');
        }
        else if(node->right && find(path, node->right, value)){
            path.push_back('R');
        }
        return !path.empty();
    }
    string getDirections(TreeNode* root, int startValue, int destValue) {
        string srcPath = "";
        string destPath = "";
        find(srcPath, root, startValue);
        find(destPath, root, destValue);
        while(!srcPath.empty() && !destPath.empty() && srcPath.back()==destPath.back()){
            srcPath.pop_back();
            destPath.pop_back();
        }
        return string(srcPath.size(), 'U') + string(rbegin(destPath), rend(destPath));
    }
};
