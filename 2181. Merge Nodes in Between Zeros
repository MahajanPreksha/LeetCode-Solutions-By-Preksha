/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        ListNode* prev = head;
        ListNode* curr = head->next;
        while(curr){
            while(curr!=NULL && curr->val!=0){
                prev->val +=curr->val;
                curr = curr->next;
            }
            if(curr->val==0){
                if(curr->next){
                    prev->next = curr;
                    prev = prev->next;
                    curr = curr->next;
                }
                else{
                    prev->next = NULL;
                    return head;
                }
            }
        }
        return head;
    }
};
