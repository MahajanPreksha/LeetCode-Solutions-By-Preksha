class Solution {
private:
    string convertLessThanThousand(int num){
        if(num==0){
            return "";
        }
        else if(num<20){
            return belowTwenty[num] + " ";
        }
        else if(num<100){
            return tens[num/10] + " " + convertLessThanThousand(num%10);
        }
        else{
            return belowTwenty[num/100] + " Hundred " + convertLessThanThousand(num%100);
        }
    }
public:
    vector<string> belowTwenty = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    vector<string> tens = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
    vector<string> thousands = {"", "Thousand", "Million", "Billion"};
    string numberToWords(int num) {
        if(num==0){
            return "Zero";
        }
        int thousandIndex{0};
        string result = "";
        while(num>0){
            if(num%1000!=0){
                result = convertLessThanThousand(num%1000) + thousands[thousandIndex] + " " + result;
            }
            num /=1000;
            thousandIndex++;
        }
        while(!result.empty() && result.back()==' '){
            result.pop_back();
        }
        return result;
    }
};
