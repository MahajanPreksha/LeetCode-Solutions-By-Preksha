class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        int n = grid.size();
        int totalSum = pow(n, 2) * (pow(n, 2)+1)/2;
        int sum = 0;
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                sum +=grid[i][j];
            }
        }
        int a = 0;
        unordered_map<int, int> mp;
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                mp[grid[i][j]]++;
            }
        }
        for(auto it:mp){
            if(it.second==2){
                a = it.first;
                break;
            }
        }
        int b = totalSum - sum + a;
        return {a, b};
    }
};
