/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void preorderTraversal(TreeNode* node, stringstream& ans){
        if(node==NULL){
            return;
        }
        ans<<node->val;
        if(node->left!=nullptr || node->right!=nullptr){
            ans<<"(";
            preorderTraversal(node->left, ans);
            ans<<")";
        }
        if(node->right!=nullptr){
            ans<<"(";
            preorderTraversal(node->right, ans);
            ans<<")";
        }
    }
public:
    string tree2str(TreeNode* root) {
        stringstream ans;
        if(root==nullptr){
            return "";
        }
        preorderTraversal(root, ans);
        return ans.str();
    }
};
