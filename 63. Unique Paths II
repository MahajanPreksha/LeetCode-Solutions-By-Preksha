class Solution {
public:
    vector<vector<int>> dp;
    int f(vector<vector<int>>& obstacleGrid, int a, int b){
        if(a<0 || b<0){
            return 0;
        }
        if(obstacleGrid[a][b]==1){
            return 0;
        }
        if(a==0 && b==0){
            return 1;
        }
        if(dp[a][b]!=-1){
            return dp[a][b];
        }
        return dp[a][b] = f(obstacleGrid, a-1, b) + f(obstacleGrid, a, b-1);
    }
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int a = obstacleGrid.size(), b = obstacleGrid[0].size();
        dp.resize(a, vector<int>(b, -1));
        return f(obstacleGrid, a-1, b-1);
    }
};
