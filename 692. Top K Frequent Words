class comp{
public:
    bool operator()(pair<int, string> a, pair<int, string> b){
        if(a.first==b.first){
            return a.second > b.second;
        }
        else{
            return a.first < b.first;
        }
    }
};
class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        map<string, int> mp;
        for(auto ele:words){
            mp[ele]++;
        }
        priority_queue<pair<int, string>, vector<pair<int, string>>, comp> pq;
        for(auto ele:mp){
            pq.push({ele.second, ele.first});
        }
        vector<string> ans;
        while(!pq.empty() && k>0){
            auto [a, b] = pq.top();
            pq.pop();
            ans.push_back(b);
            k--;
        }
        return ans;
    }
};
