/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int numComponents(ListNode* head, vector<int>& nums) {
        ListNode* curr = head;
        int count = 0;
        bool flag = false;
        while(curr!=NULL){
            if(find(nums.begin(), nums.end(), curr->val)!=nums.end()){
                if(!flag){
                    flag = true;
                    count++;
                }
            }
                else{
                    flag = false;
                }
            curr = curr->next;
        }
        return count;
    }
};
