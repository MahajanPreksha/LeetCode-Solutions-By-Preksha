class Solution {
public:
    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {
        priority_queue<pair<int, int>> pq;
        int n = difficulty.size();
        for(int i=0; i<n; i++){
            pq.push({profit[i], difficulty[i]});
        }
        priority_queue<int> pq2;
        int m = worker.size();
        for(int i=0; i<m; i++){
            pq2.push(worker[i]);
        }
        int ans = 0;
        while(!pq2.empty()){
            int w = pq2.top();
            pq2.pop();
            while(!pq.empty()){
                int p = pq.top().first, d = pq.top().second;
                if(d>w){
                    pq.pop();
                }
                else{
                    ans +=p;
                    break;
                }
            }
        }
        return ans;
    }
};
