class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> dist(n, vector<int>(n, INT_MAX));
        for(int i=0; i<n; i++){
            dist[i][i] = 0;
        }
        for(auto edge:edges){
            dist[edge[0]][edge[1]] = edge[2];
            dist[edge[1]][edge[0]] = edge[2];
        }
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                for(int k=0; k<n; k++){
                    if(dist[j][i]<INT_MAX && dist[i][k]<INT_MAX){
                        dist[j][k] = min(dist[j][k], dist[j][i] + dist[i][k]);
                    }
                }
            }
        }
        int ans;
        int count = INT_MAX;
        for(int i=n-1; i>=0; i--){
            int tempCount = 0;
            for(int j=0; j<n; j++){
                if(dist[i][j]<=distanceThreshold && i!=j){
                    tempCount++;
                }
            }
            if(tempCount<count){
                ans = i;
                count = tempCount;
            }
        }
        return ans;
    }
};
